Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/hott/0-common.rzk
[ 1 out of 7 ] Checking #def prod
[ 2 out of 7 ] Checking #def diagonal
[ 3 out of 7 ] Checking #def composition
[ 4 out of 7 ] Checking #def triple-composition
[ 5 out of 7 ] Checking #def identity
[ 6 out of 7 ] Checking #def constant
[ 7 out of 7 ] Checking #def reindex
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/hott/1-contractible.rzk
[ 1 out of 3 ] Checking #def isContr
[ 2 out of 3 ] Checking #def contraction-center
[ 3 out of 3 ] Checking #def contracting-htpy
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/hott/2-paths.rzk
[ 1 out of 21 ] Checking #def rev
[ 2 out of 21 ] Checking #def concat
[ 3 out of 21 ] Checking #def altconcat
[ 4 out of 21 ] Checking #def refl-concat
[ 5 out of 21 ] Checking #def concat-altconcat
[ 6 out of 21 ] Checking #def altconcat-concat
[ 7 out of 21 ] Checking #def zig-zag-concat
[ 8 out of 21 ] Checking #def zag-zig-concat
[ 9 out of 21 ] Checking #def concat-right-cancel
[ 10 out of 21 ] Checking #def homotopy-concat
[ 11 out of 21 ] Checking #def concat-homotopy
[ 12 out of 21 ] Checking #def alt-triangle-rotation
[ 13 out of 21 ] Checking #def triangle-rotation
[ 14 out of 21 ] Checking #def ap
[ 15 out of 21 ] Checking #def ap-id
[ 16 out of 21 ] Checking #def ap-htpy
[ 17 out of 21 ] Checking #def ap-comp
[ 18 out of 21 ] Checking #def rev-ap-comp
[ 19 out of 21 ] Checking #def transport
[ 20 out of 21 ] Checking #def transport2
[ 21 out of 21 ] Checking #def apd
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/hott/3-homotopies.rzk
[ 1 out of 10 ] Checking #def homotopy
[ 2 out of 10 ] Checking #def homotopy-rev
[ 3 out of 10 ] Checking #def homotopy-composition
[ 4 out of 10 ] Checking #def homotopy-postwhisker
[ 5 out of 10 ] Checking #def homotopy-prewhisker
[ 6 out of 10 ] Checking #def nat-htpy
[ 7 out of 10 ] Checking #def a-cylinder-homotopy-coherence
[ 8 out of 10 ] Checking #def another-cylinder-homotopy-coherence
[ 9 out of 10 ] Checking #def cylinder-homotopy-coherence
[ 10 out of 10 ] Checking #def rev-cylinder-homotopy-coherence
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/hott/4-equivalences.rzk
[ 1 out of 39 ] Checking #def hasSection
[ 2 out of 39 ] Checking #def hasRetraction
[ 3 out of 39 ] Checking #def isEquiv
[ 4 out of 39 ] Checking #def isEquiv-section
[ 5 out of 39 ] Checking #def isEquiv-retraction
[ 6 out of 39 ] Checking #def isEquiv-htpic-inverses
[ 7 out of 39 ] Checking #def hasInverse
[ 8 out of 39 ] Checking #def hasInverse-inverse
[ 9 out of 39 ] Checking #def hasInverse-isEquiv
[ 10 out of 39 ] Checking #def isEquiv-hasInverse
[ 11 out of 39 ] Checking #def hasInverse-retraction-composite
[ 12 out of 39 ] Checking #def hasInverse-section-composite
[ 13 out of 39 ] Checking #def hasInverse-triple-composite
[ 14 out of 39 ] Checking #def hasInverse-quintuple-composite
[ 15 out of 39 ] Checking #def isHalfAdjointEquiv
[ 16 out of 39 ] Checking #def ALTisHalfAdjointEquiv
[ 17 out of 39 ] Checking #def hasInverse-kept-htpy
[ 18 out of 39 ] Checking #def hasInverse-discarded-htpy
[ 19 out of 39 ] Checking #def hasInverse-discarded-naturality-square
[ 20 out of 39 ] Checking #def hasInverse-rev-cylinder-homotopy-coherence
[ 21 out of 39 ] Checking #def hasInverse-ap-rev-cylinder-homotopy-coherence
[ 22 out of 39 ] Checking #def hasInverse-cylinder-coherence
[ 23 out of 39 ] Checking #def hasInverse-replaced-naturality-square
[ 24 out of 39 ] Checking #def hasInverse-corrected-htpy
[ 25 out of 39 ] Checking #def hasInverse-coherence
[ 26 out of 39 ] Checking #def hasInverse-correctedhasInverse
[ 27 out of 39 ] Checking #def hasInverse-isHalfAdjointEquiv
[ 28 out of 39 ] Checking #def isEquiv-isHalfAdjointEquiv
[ 29 out of 39 ] Checking #def iff
[ 30 out of 39 ] Checking #def Eq
[ 31 out of 39 ] Checking #def sym_Eq
[ 32 out of 39 ] Checking #def compose_Eq
[ 33 out of 39 ] Checking #def compose_isEquiv
[ 34 out of 39 ] Checking #def triple_compose_Eq
[ 35 out of 39 ] Checking #def triple_compose_isEquiv
[ 36 out of 39 ] Checking #def FunExt
[ 37 out of 39 ] Checking #def funext_test
[ 38 out of 39 ] Checking #def fibered-equiv-function-iff
[ 39 out of 39 ] Checking #def fibered-equiv-function-equiv
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/hott/5-total-space.rzk
[ 1 out of 25 ] Checking #def total-space-projection
[ 2 out of 25 ] Checking #def contractible-fibers
[ 3 out of 25 ] Checking #def contractible-fibers-section
[ 4 out of 25 ] Checking #def contractible-fibers-actual-section
[ 5 out of 25 ] Checking #def contractible-fibers-section-htpy
[ 6 out of 25 ] Checking #def contractible-fibers-section-is-section
[ 7 out of 25 ] Checking #def check
[ 8 out of 25 ] Checking #def fibered-path-to-sigma-path
[ 9 out of 25 ] Checking #def contractible-fibers-retraction-htpy
[ 10 out of 25 ] Checking #def contractible-fibers-retraction
[ 11 out of 25 ] Checking #def contractible-fibers-projection-equiv
[ 12 out of 25 ] Checking #def total-path-to-base-path
[ 13 out of 25 ] Checking #def total-path-to-fibered-path
[ 14 out of 25 ] Checking #def projection-equiv-implies-inhabited-fibers
[ 15 out of 25 ] Checking #def projection-coherent-equiv-inverse
[ 16 out of 25 ] Checking #def projection-coherent-equiv-base-htpy
[ 17 out of 25 ] Checking #def projection-coherent-equiv-section
[ 18 out of 25 ] Checking #def projection-coherent-equiv-total-htpy
[ 19 out of 25 ] Checking #def projection-coherent-equiv-fibered-htpy
[ 20 out of 25 ] Checking #def projection-coherent-equiv-base-coherence
[ 21 out of 25 ] Checking #def projection-coherent-equiv-transport-coherence
[ 22 out of 25 ] Checking #def projection-coherent-equiv-fibered-contracting-htpy
[ 23 out of 25 ] Checking #def projection-coherent-equiv-contractible-fibers
[ 24 out of 25 ] Checking #def projection-equiv-contractible-fibers
[ 25 out of 25 ] Checking #def projection-theorem
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/3-simplicial-type-theory.md
[ 1 out of 11 ] Checking #def Δ¹
[ 2 out of 11 ] Checking #def Δ²
[ 3 out of 11 ] Checking #def Δ³
[ 4 out of 11 ] Checking #def ∂Δ¹
[ 5 out of 11 ] Checking #def ∂Δ¹-in-Δ¹
[ 6 out of 11 ] Checking #def ∂Δ²
[ 7 out of 11 ] Checking #def Λ
[ 8 out of 11 ] Checking #def shapeProd
[ 9 out of 11 ] Checking #def Δ¹×Δ¹
[ 10 out of 11 ] Checking #def ∂Δ¹×Δ¹
[ 11 out of 11 ] Checking #def Δ²×Δ¹
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/4-extension-types.md
[ 1 out of 11 ] Checking #def extension-projection
[ 2 out of 11 ] Checking #def flip-ext-fun
[ 3 out of 11 ] Checking #def flip-ext-fun-inv
[ 4 out of 11 ] Checking #def curry-uncurry
[ 5 out of 11 ] Checking #def uncurry-opcurry
[ 6 out of 11 ] Checking #def fubini
[ 7 out of 11 ] Checking #def axiom-choice
[ 8 out of 11 ] Checking #def cofibration_composition'
[ 9 out of 11 ] Checking #def cofibration_union
[ 10 out of 11 ] Checking #def ExtExt
[ 11 out of 11 ] Checking #def fibered-equiv-extension-equiv
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/5-segal-types.md
[ 1 out of 61 ] Checking #def hom
[ 2 out of 61 ] Checking #def hom2
[ 3 out of 61 ] Checking #def hom2-triangle
[ 4 out of 61 ] Checking #def isSegal
[ 5 out of 61 ] Checking #def Segal-comp
[ 6 out of 61 ] Checking #def Segal-comp-witness
[ 7 out of 61 ] Checking #def Segal-comp-uniqueness
[ 8 out of 61 ] Checking #def horn-restriction
[ 9 out of 61 ] Checking #def identity-identity-composition
[ 10 out of 61 ] Checking #def horn
[ 11 out of 61 ] Checking #def compositions-are-horn-fillings
[ 12 out of 61 ] Checking #def restriction-equiv
[ 13 out of 61 ] Checking #def Segal-restriction-equiv
[ 14 out of 61 ] Checking #def Segal-restriction-equiv-test
[ 15 out of 61 ] Checking #def isSegal'
[ 16 out of 61 ] Checking #def isSegal-isSegal'
[ 17 out of 61 ] Checking #def isSegal'-isSegal
[ 18 out of 61 ] Checking #def isSegal-iff-isSegal'
[ 19 out of 61 ] Checking #def Segal-function-types-function
[ 20 out of 61 ] Checking #def Segal-function-types-function'
[ 21 out of 61 ] Checking #def Segal-function-types-function-pointwise-check
[ 22 out of 61 ] Checking #def Segal-function-types-function-check
[ 23 out of 61 ] Checking #def Segal-function-types
[ 24 out of 61 ] Checking #def Segal-extension-types-function
[ 25 out of 61 ] Checking #def Segal-extension-types-function'
[ 26 out of 61 ] Checking #def Segal-extension-types-function-pointwise-check
[ 27 out of 61 ] Checking #def Segal-extension-types-function-check
[ 28 out of 61 ] Checking #def Segal-extension-types-start
[ 29 out of 61 ] Checking #def Segal-extension-types-middle
[ 30 out of 61 ] Checking #def Segal-extension-types-last
[ 31 out of 61 ] Checking #def Segal-extension-types
[ 32 out of 61 ] Checking #def arr
[ 33 out of 61 ] Checking #def Segal'-arrow-types
[ 34 out of 61 ] Checking #def Segal-arrow-types
[ 35 out of 61 ] Checking #def id-arr
[ 36 out of 61 ] Checking #def Segal-comp-id
[ 37 out of 61 ] Checking #def Segal-id-comp
[ 38 out of 61 ] Checking #def unbounded-arrow
[ 39 out of 61 ] Checking #def unfolding-square
[ 40 out of 61 ] Checking #def unfolding-square-test
[ 41 out of 61 ] Checking #def unfolding-square-another-test
[ 42 out of 61 ] Checking #def unfolding-square-yet-another-test
[ 43 out of 61 ] Checking #def unfolding-square-horn-left-test
[ 44 out of 61 ] Checking #def unfolding-square-horn-right-test
[ 45 out of 61 ] Checking #def unfolding-square-horn-combined-test
[ 46 out of 61 ] Checking #def square-to-arr-in-arr
[ 47 out of 61 ] Checking #def Segal-comp-witness-triangle
[ 48 out of 61 ] Checking #def Segal-comp-witness-square
[ 49 out of 61 ] Checking #def Segal-arr-in-arr
[ 50 out of 61 ] Checking #def Segal-horn-in-arrow
[ 51 out of 61 ] Checking #def Segal-associativity-witness
[ 52 out of 61 ] Checking #def Segal-associativity-prism
[ 53 out of 61 ] Checking #def Segal-associativity-tetrahedron
[ 54 out of 61 ] Checking #def Segal-triple-composite-also-fails
[ 55 out of 61 ] Checking #def Segal-triple-composite-fails
[ 56 out of 61 ] Checking #def Segal-triple-composite
[ 57 out of 61 ] Checking #def Segal-left-associativity-witness
[ 58 out of 61 ] Checking #def Segal-right-associativity-witness
[ 59 out of 61 ] Checking #def Segal-left-associativity
[ 60 out of 61 ] Checking #def Segal-right-associativity
[ 61 out of 61 ] Checking #def Segal-associativity
Checking module from /Users/nikolaikudasov/git/emilyriehl/yoneda/6-2cat-of-segal-types.md
[ 1 out of 2 ] Checking #def ap
[ 2 out of 2 ] Checking #def functors-pres-id
