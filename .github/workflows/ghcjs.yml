name: Build with GHCJS and Deploy to GitHub Pages

on:
  push:
    branches: [ main, develop ]
    tags: [ v* ]
    paths:
      - .github/workflows/ghcjs.yml
      - rzk/**
      - try-rzk/**
      - stack.yaml
  pull_request:
    branches: [ main, develop ]
    paths:
      - rzk/**
      - try-rzk/**
      - stack.yaml

  workflow_dispatch:  # allow triggering this workflow manually

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v3

      - name: ðŸ§° Setup nix (cache)
        uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          # pinning Nix version
          install_url: https://releases.nixos.org/nix/nix-2.13.3/install

      - name: ðŸ’¾ Setup cachix (miso-haskell)
        uses: cachix/cachix-action@v10
        with:
          name: miso-haskell

      - name: ðŸ”¨ Remove rzk.cabal, lexer and parser generator files
        run: |
          rm -f rzk/src/Language/Rzk/Syntax/Lex.x
          rm -f rzk/src/Language/Rzk/Syntax/Par.y
          rm -f rzk/rzk.cabal

      - name: ðŸ”¨ Build GHCJS version with Nix
        run: |
          nix-build try-rzk/

      - name: ðŸ”¨ Collect build artifacts
        run: |
          mkdir -p dist/result/bin
          cp -r ./result/bin/try-rzk.jsexe/ dist/result/bin/.
          chmod -R +w dist/
          cp try-rzk/playground.html dist/.

      - name: "ðŸ“˜ Publish JS \"binaries\" (${{ github.ref_name }})"
        if: github.ref_name != 'main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          folder: dist
          target-folder: ${{ github.ref_name }}
          clean: false

      - name: "ðŸ“˜ Publish JS \"binaries\""
        if: github.ref_name == 'main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          folder: dist
          clean: false
